# Generated by Django 2.2.28 on 2024-05-06 18:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import forum_app.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.RunSQL(
            "CREATE SCHEMA IF NOT EXISTS forum",
            "DROP SCHEMA IF EXISTS forum"
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': '"forum"."user"',
                'ordering': ['last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.TextField(max_length=100, verbose_name='name')),
            ],
            options={
                'verbose_name': 'section',
                'verbose_name_plural': 'sections',
                'db_table': '"forum"."section"',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=forum_app.models.get_datetime, null=True, validators=[forum_app.models.check_created], verbose_name='created')),
                ('title', models.TextField(max_length=100, verbose_name='title')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'thread',
                'verbose_name_plural': 'threads',
                'db_table': '"forum"."thread"',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='SectionThread',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forum_app.Section', verbose_name='section')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forum_app.Thread', verbose_name='thraed')),
            ],
            options={
                'verbose_name': 'relationship section thread',
                'verbose_name_plural': 'relationships section thread',
                'db_table': '"forum"."section_thread"',
                'unique_together': {('section', 'thread')},
            },
        ),
        migrations.AddField(
            model_name='section',
            name='threads',
            field=models.ManyToManyField(through='forum_app.SectionThread', to='forum_app.Thread', verbose_name='thread'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=forum_app.models.get_datetime, null=True, validators=[forum_app.models.check_created], verbose_name='created')),
                ('message_body', models.TextField(verbose_name='message_body')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forum_app.Thread')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'message',
                'verbose_name_plural': 'messages',
                'db_table': '"forum"."message"',
                'ordering': ['created'],
            },
        ),
    ]
